
name: BASIC CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ making-hw2 ]
  pull_request:
    branches: [ making-hw2 ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
#jobs:
#  static:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - run: sudo apt-get update -y
#      - run: sudo apt-get install -y clang-tidy cppcheck
#      - run: sudo apt-get install python3-pip
#      - run: pip3 install --user cpplint
#      - run: sudo apt install clang-format
#      - run: clang-tidy hw1_lib/*.c hw1_lib/*.h main.c -warnings-as-errors=* -extra-arg=-std=c99 -- -I hw1_lib/
#      - run: cppcheck hw1_lib main.c --enable=all --inconclusive --error-exitcode=1 -I hw1_lib/ --suppress=missingIncludeSystem
#      - run: clang-format ./hw1_lib/*.c main.c >a
#      - run: clang-format ./hw1_lib/*.c main.c >b
#      - run: diff a b
#      - run: cpplint --extensions=c --filter=-readability/casting,-legal/copyright hw1_lib/* main.c

  stress_test:
    runs-on: ubuntu-latest
    needs: [static]
    steps:
      - uses: actions/checkout@v2
      - run: sudo apt-get update -y
      - run: sudo apt install cmake gcc libgtest-dev valgrind lcov
      - run: sudo apt-get install -y clang-tools
      - run: sudo cmake .
      - run: sudo make
      - run: sudo prepare_test
      - run: ./hw2_static
      - run: ./hw2_shared
      #    - run: sudo scan-build make
      - run: lcov -t "./tests/test_hw1" -o coverage.info -c -d "./hw2_lib/CMakeFiles/hw2_lib.dir/" && genhtml -o report coverage.info
      - name: upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: cov_report
          path: ./report
#  test:
#    runs-on: ubuntu-latest
#    needs: [static]
#    steps:
#    - uses: actions/checkout@v2
#    - run: sudo apt-get update -y
#    - run: sudo apt install cmake gcc libgtest-dev valgrind lcov
#    - run: sudo apt-get install -y clang-tools
#    - run: sudo cmake .
#    - run: sudo make
#    - run: valgrind --tool=memcheck --leak-check=yes --error-exitcode=1 ./tests/test_hw2
#    - run: sudo ./tests/test_hw1
##    - run: sudo scan-build make
#    - run: lcov -t "./tests/test_hw1" -o coverage.info -c -d "./hw2_lib/CMakeFiles/hw2_lib.dir/" && genhtml -o report coverage.info
#    - name: upload artifact
#      uses: actions/upload-artifact@v2
#      with:
#        name: cov_report
#        path: ./report
